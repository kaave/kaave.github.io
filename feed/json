{
    "version": "https://jsonfeed.org/version/1",
    "title": "kaave portal site | blog",
    "home_page_url": "https://kaave.github.io/",
    "feed_url": "https://kaave.github.io/feed/json",
    "description": "kaave portal site | blog",
    "author": {
        "name": "kaave",
        "url": "https://kaave.github.io/"
    },
    "items": [
        {
            "id": "https://kaave.github.io/blog/2018/06/14-pixi-glitch.html",
            "html_content": "<h2 id=\"-\">モチベ</h2>\n<p>別にメディアアートまでいかなくてもいいけどTOPにばばばんと表示されてる画像や背景に表示している画像にエフェクトをかけたりしてみたいなぁというモチベが一年くらい前からくすぶってたんですが、ついに大きな&quot;炎&quot;になったので取り組んでみました。</p>\n<p>まずはライブラリの選択からじゃーってことでPixi.jsかThree.jsのどっちかをかじろうと考えた結果、Pixi.jsをやることに。</p>\n<p>で、色々ぐぐってたら<a href=\"https://github.com/ktingvoar/PixiGlitch\">良さげなコード</a>を発見したんですが結構長いこと更新されておらず、最新のバージョンだと動かなかった&amp;サンプルがイマイチだったので自分でそのへんを更新してみました。</p>\n<h3 id=\"-\">制作物</h3>\n<ul>\n<li><a href=\"https://romantic-fermat-4102af.netlify.com/filter.html\">Demo</a></li>\n<li><a href=\"https://github.com/kaave/playground-pixi-js\">Repository</a><ul>\n<li>面倒くさくて検証用の環境使ってそのまま書いちゃってるのでそのうち移転するかも。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"demo-\">Demoについて</h3>\n<h4 id=\"-\">操作方法</h4>\n<ul>\n<li>左上のプルダウンからエフェクトかける対象を選択できます。プリセット画像、デバイスのカメラ、アップロード画像のいずれかとなります。<ul>\n<li>アップロード画像はgif, jpg, pngに対応しています。</li>\n<li>アップロードフォームを隠してプルダウンの選択で発火するようにしたかったんですがセキュリティの関係でアウツ。なんとかする方法ってあるんですかね？</li>\n</ul>\n</li>\n<li>右のフォームでエフェクトを選択します。<ul>\n<li>色系はON/OFFしかないです。</li>\n<li>その他は色々パラメータがあるんでついでにランダムもつけました。乱数のアルゴリズムは単なる<code>Math.random</code>なので微妙です。</li>\n</ul>\n</li>\n<li>キーボードでエフェクトのON/OFF、ランダムのON/OFFを設定できます。<ul>\n<li>フォームの名称右にカッコでくくられた一文字があると思いますが、そのキーを押すとON/OFFが切り替わります。</li>\n<li><code>shift</code>を押しながらでランダムのON/OFFが切り替わります。</li>\n<li><code>enter</code>ですべてのエフェクトがOFFになります。</li>\n<li><code>shift</code>を押しながら<code>enter</code>ですべてのランダムがOFFになります。</li>\n<li>とりあえず<code>a</code>を叩いて<code>shift+a</code>を叩き、ほかをいじってくのがおもしろいです！ソースはもちろんカメラで！</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"netlify\">Netlify</h4>\n<p>GitHub Pagesでもよかったんですが面倒くさかったのでNetlifyに。相も変わらず楽すぎます！もうちょっと回線がぶっとくなるといいなぁ。</p>\n<h3 id=\"-\">コードとかそのへん</h3>\n<h4 id=\"webpack-\">webpackさまさま</h4>\n<p>シェーダーのコードを<code>.frag</code>で別ファイルに構築し、<code>raw-loader</code>で読み込む環境を作りました。これが非常にいい感じ。</p>\n<h4 id=\"typescript-pixi-js\">TypeScriptでPixi.js</h4>\n<p>どうも型ファイルが色々と変でいくつか<code>any</code>でごまかしました。あんまいいことじゃないけど。だって型ファイルに手ぇ入れてプルリク出すほどPixi.jsわかんないんで。</p>\n<h4 id=\"-\">シェーダーわからん</h4>\n<p>これは&quot;特殊技能&quot;でWeb屋にこれを求めたらいかんなという印象ですがいかがなもんでしょう…。</p>\n<h4 id=\"web-pixi-js-\">Webアクセシビリティに準拠したPixi.jsの使い方</h4>\n<p>今回は画像をゴリゴリやってるだけなので<code>role=&quot;presentation&quot;</code>つけときゃとりあえずいいかなって内容なんですが、例えばキャッチコピーをばんとテキストで入れてそいつをごりごりいじったときにどうすんのがいいんでしょう？</p>\n<p><code>canvas</code>に<code>aria-label</code>とか？そのうち調べよう・・・。</p>\n<h3 id=\"-\">今後</h3>\n<h4 id=\"-\">斜めに画像をちょん切りたい</h4>\n<p>あんまグリッチって感じじゃないけどどうやってやるのかまだ調べてないんですけど画像を斜めにスライスして個別に移動とかやりたいんですよね。</p>\n<h4 id=\"dom-\">DOMではできないテキスト表現</h4>\n<p>小さなテキストを死ぬほど描画していろいろやりたい。ファミコンをどついたような感じというか。DOMでやるより軽そうだし…。</p>\n<h4 id=\"-\">シェーダーはよくわかんない</h4>\n<p>上でも書いたけどわかんないのでネットで拾ってきたのをちょっとカスタムできるくらいで当面はいいかな。</p>\n<h4 id=\"-\">画面まるごと</h4>\n<p><a href=\"https://html2canvas.hertzen.com/\">html2canvas</a>でうまいこといけそうなんだけど、IEが立ちはだかるのであった。IEいらん案件がでてきたらやってみたいね。</p>\n",
            "url": "https://kaave.github.io/blog/2018/06/14-pixi-glitch.html",
            "title": "Pixi.jsでGlitch",
            "summary": "JavaScriptPixiJSWebGL",
            "date_modified": "2018-06-14T00:00:00Z",
            "author": {
                "name": "kaave",
                "url": "https://kaave.github.io/"
            }
        },
        {
            "id": "https://kaave.github.io/blog/2017/07/02-ordinary-day.html",
            "html_content": "<h2 id=\"github-io-\">github.io作り直しました</h2>\n<p>もう全部いじりました。つってもまぁ基本的な部分はそのままですが。</p>\n<p>これを機に思い立ったときにだけ更新するようにします。</p>\n<h3 id=\"-\">できたとこ</h3>\n<h4 id=\"-\">モバイルファースト</h4>\n<p>これ結構考えものだなぁと思った。</p>\n<p>少なくともPC版のプロトタイプ(大まかなレイアウト)までやってからスマホ側の構築やんないと、やべぇここにコンテナ的なdivがいるわ、ということがわりと普通に発生するなと。</p>\n<p>幸いデザインがあってないようなものだったのでなんとかなりました。</p>\n<h4 id=\"rss-atom-\">RSS(atom)対応</h4>\n<p><a href=\"https://www.npmjs.com/package/feed\">feed</a>という素晴らしいモジュールがすべて解決してくれました。</p>\n<h4 id=\"-\">グリッドレイアウト</h4>\n<p>サイト全体を単純に区切るだけなら全然悪くない。問題はモバイルの対応がほんとつい最近だったってことかな。</p>\n<h4 id=\"-\">アニメーション連発</h4>\n<p>やってみたらできたってやつです。</p>\n<h4 id=\"react-router-\">react-routerで構築</h4>\n<p>これがなかなかめんどくさかった。</p>\n<p>URLから目的のJSONをfetchしてきて表示する、ということをやっているんですが、URLにマッチしたcomponentの中でパラメータを取得してそれを親に返してうんぬんかんぬんしてます。</p>\n<p>微妙、の一言。まぁreact-routerのおかげで記事それぞれにURL発行できたんですが。</p>\n<h4 id=\"highlight-js-\">highlight.js対応</h4>\n<p>前もやってたっけ？もはや記憶にないしコードもふっ飛ばした。</p>\n<h3 id=\"-\">できなかったとこ</h3>\n<h4 id=\"gulp-ssr\">gulpタスク内でSSR</h4>\n<p>最初は楽勝だろと思ってたんですが、よく考えたらJSXをgulpから読み込まないといけないからクソめんどくない？って気づいて一気に嫌になりました。</p>\n<p>今は記事毎にrootと同じhtmlを作成して404にならないようにして、あとは遷移先でreact-routerがよしなにやってくれるのに任せてます。</p>\n<p>gulp-babelとか使えばできそうではあります。</p>\n<h2 id=\"-\">日記</h2>\n<p>長久手のイオンに行ってきました。</p>\n<p>インナーバッグがほしいなーってのと、自転車に乗っておきたいなーっていう理由で。</p>\n<p>イオンっていうと吹き抜けが凄いイメージだったけど、そうじゃなかったので意外だった。あと、混みすぎ。</p>\n",
            "url": "https://kaave.github.io/blog/2017/07/02-ordinary-day.html",
            "title": "サイトまるごと作り直しました",
            "summary": "Reactgulp",
            "date_modified": "2017-07-02T00:00:00Z",
            "author": {
                "name": "kaave",
                "url": "https://kaave.github.io/"
            }
        },
        {
            "id": "https://kaave.github.io/blog/2016/04/05-stand-and-write.html",
            "html_content": "<h2 id=\"-\">立ちっぱなし</h2>\n<p>打ち合わせでホワイトボード書きまくったので疲れた。</p>\n<h3 id=\"-\">めし</h3>\n<h3 id=\"-\">買い物</h3>\n<h3 id=\"-\">お勉強</h3>\n<h3 id=\"-\">遊び</h3>\n",
            "url": "https://kaave.github.io/blog/2016/04/05-stand-and-write.html",
            "title": "立ちっぱなし",
            "date_modified": "2016-04-05T00:00:00Z",
            "author": {
                "name": "kaave",
                "url": "https://kaave.github.io/"
            }
        },
        {
            "id": "https://kaave.github.io/blog/2016/04/04-css-animation.html",
            "html_content": "<h2 id=\"-\">ささっと</h2>\n<p>仕事で右からニュッと出てくるメニューをCSSアニメーション使って書いた。<br>いや〜CSSアニメーションホント楽。</p>\n<h3 id=\"-\">めし</h3>\n<p>豚肉とにんにくの芽炒めを作った。</p>\n",
            "url": "https://kaave.github.io/blog/2016/04/04-css-animation.html",
            "title": "ささっと",
            "date_modified": "2016-04-04T00:00:00Z",
            "author": {
                "name": "kaave",
                "url": "https://kaave.github.io/"
            }
        },
        {
            "id": "https://kaave.github.io/blog/2016/04/03-atr.html",
            "html_content": "<h2 id=\"atr\">ATR</h2>\n<p>シャキッとしないのでATR聞いているが、ハイテンションになるための音楽としてATRを超えるものはなかなかないんじゃないだろうか。</p>\n<h3 id=\"-\">めし</h3>\n<p>ラフテーとレンズ豆のマリネ作った。</p>\n<p>レンズ豆は5~6分茹でると硬さが残っていい感じ。</p>\n",
            "url": "https://kaave.github.io/blog/2016/04/03-atr.html",
            "title": "ATR",
            "date_modified": "2016-04-03T00:00:00Z",
            "author": {
                "name": "kaave",
                "url": "https://kaave.github.io/"
            }
        }
    ]
}